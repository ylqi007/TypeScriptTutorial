{
/*
 tsconfig.json是TS编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译
 ** 表示任意目录
 * 表示任意文件

  "include":
  "exclude" 不需要被编译的文件目录。有默认值，可选性配置
    默认值: ["node_modules", "bower_components", "jspm_packages"]
  "extends": 指定被继承的配置文件
  "files": 指定被编译文件的列表，只有需要编译的文件少时才会用到。列表中的文件都会被TS编译器编译
  "compilerOptions":
*/
  "include": [
    "./src/**/*"
  ],
//  "exclude": [
//    "./src/hello/**/*"
//  ]
  /* 编译器的选项
    * target: 用来指定ts被编译成的ES版本
    * module: 指定要使用模块化的规范
    * lib: 指定项目中要用到的库
    * outDir: 用来指定编译后文件所在的目录
    * outFile: 设置outFile后，所有的全局作用域中的代码会合并到同一个文件中。用的不多
    * allowJs: 是否对js文件进行编译，默认是false
    * checkJs: 是否检查js代码是否符合语法规范，默认值是false
    * removeComments: 是否移除comments
    * noEmit: 不生成编译后的文件
  */
  "compilerOptions": {
    "target": "ES2022",
    "module": "commonjs",
    // "lib": []
    "outDir": "./dist",
    // "outFile": "./dist/app.js"
    "allowJs": true,
    "checkJs": false,
    "removeComments": true,
    "noEmit": false,
    "strict": true,  // 所有严格检查的总开关，一般开发建议设置为true
//    "noEmitOnError": true, // 当有错误时，不生成编译文件
//    "alwaysStrict": true,  // 用来设置编译后的js文件是否使用严格模式，默认为false
//    "noImplicitAny": true,  // 设置为true，不允许隐式的any
//    "noImplicitThis": true,  // 不允许不明确类型的this
//    "strictNullChecks": true,

  }
}